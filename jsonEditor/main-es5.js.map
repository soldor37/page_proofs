{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/json-edit/json-edit.component.ts","webpack:///src/app/json-edit/json-edit.component.html","webpack:///src/app/json-save/json-save.component.ts","webpack:///src/app/json-save/json-save.component.html","webpack:///src/app/jsonInput/jsonInput.component.ts","webpack:///src/app/jsonInput/jsonInput.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","jsonObj","jsonOut","onJsonInput","onJsonOut","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","JsonEditComponent","tmpObj","alert","document","getElementById","style","display","tmp","JSON","stringify","tmpJson","emit","text","index","item","obj","Object","length","push","indexOf","splice","jsonToOut","JsonSaveComponent","JsonInputComponent","jsonIn","textVar","parse","err","files","console","log","file","reader","FileReader","readAsText","onload","txt","result","textInput","changeListener","jsonToObj","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'jsonEditor';\r\n\r\n  jsonObj = [];\r\n  jsonOut = [];\r\n  public onJsonInput(jsonObj){\r\n    // console.log(jsonObj)\r\n    this.jsonObj = jsonObj;\r\n  }\r\n  public onJsonOut(jsonOut){\r\n    // console.log(jsonObj)\r\n    this.jsonOut = jsonOut;\r\n  }\r\n}\r\n","<div class=\"app\">\r\n  <div class=\"page\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-3\">\r\n        <app-jsonInput (jsonIn)=\"onJsonInput($event)\"></app-jsonInput>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <app-jsonEdit [tmpJson]=\"jsonObj\" (jsonOut)=\"onJsonOut($event)\"></app-jsonEdit>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <app-jsonSave [jsonOut]=\"jsonOut\"></app-jsonSave>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {FormsModule} from '@angular/forms'\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { JsonInputComponent } from './jsonInput/jsonInput.component';\r\nimport { JsonEditComponent } from './json-edit/json-edit.component';\r\nimport { JsonSaveComponent } from './json-save/json-save.component'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    JsonInputComponent,\r\n    JsonEditComponent,\r\n    JsonSaveComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n  \r\n }\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-jsonEdit',\r\n  templateUrl: './json-edit.component.html',\r\n  styleUrls: ['./json-edit.component.css']\r\n})\r\nexport class JsonEditComponent implements OnInit {\r\n  @Input() tmpJson;\r\n\r\n  @Output() jsonOut: EventEmitter<object> = new EventEmitter();\r\n  // BreakException = \"Td has no value\"\r\n  \r\n  public jsonToOut() {\r\n    let alert = document.getElementById('alertInputRow');\r\n    alert.style.display = \"none\";\r\n    // try{\r\n    //   this.tmpJson.forEach(element => {\r\n    //     if ((Object.keys(element)).length < (Object.keys(this.tmpJson[0])).length) {\r\n    //       alert.style.display = \"block\";\r\n    //       throw this.BreakException;\r\n    //     }\r\n    //   });\r\n      let tmp: string = JSON.stringify(this.tmpJson);\r\n      this.jsonOut.emit({ text: tmp });\r\n    // }\r\n    // catch(err){\r\n    //   if (err !== this.BreakException) throw err;\r\n    // }\r\n    \r\n  }\r\n  trackByFn(index: any, item: any) {\r\n    return index;\r\n }\r\n  tmpObj: object = {};\r\n  \r\n\r\n  addRow(obj) {\r\n    let alert = document.getElementById('alertInputRow');\r\n    alert.style.display = \"none\";\r\n    if ((Object.keys(obj)).length < (Object.keys(this.tmpJson[0])).length) {\r\n      alert.style.display = \"block\";\r\n    }\r\n    else {\r\n      //console.log((Object.keys(this.tmpJson[0])).length)\r\n      this.tmpJson.push(obj);\r\n      this.tmpObj = {};\r\n    }\r\n  }\r\n  deleteRow(item: string) {\r\n    const index: number = this.tmpJson.indexOf(item);\r\n    if (index !== -1) {\r\n      this.tmpJson.splice(index, 1);\r\n    }\r\n  }\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"card border-0\">\r\n    <h2 class=\"page__title\">Edit</h2>\r\n    <div class=\"table-wrap\">\r\n        <div class=\"table\" *ngIf=\"tmpJson.length\">\r\n            <table class=\"jsonTable table-hover table-bordered table-responsive-sm\">\r\n                <thead class=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\" *ngFor=\"let item of tmpJson[0] | keyvalue\">{{item.key}}</th>\r\n                        <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let obj of tmpJson; let id = index;\" >\r\n                        <td *ngFor=\"let item of tmpJson[id] | keyvalue trackBy: trackByFn\">\r\n                            <!-- {{tmpJson[obj.key][item.key] | json}} -->\r\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"tmpJson[id][item.key]\" >\r\n                        </td>\r\n                        <td><button class=\"btn btn-danger\" type=\"button\" (click)=\"deleteRow(tmpJson[id])\">Delete</button></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td *ngFor=\"let obj of tmpJson[0] | keyvalue\">\r\n                            <input type=\"text\" name=\"tdData\" class=\"form-control\" [(placeholder)]=\"obj.key\"\r\n                                [(ngModel)]=\"tmpObj[obj.key]\">\r\n                        </td>\r\n                        <td>\r\n                            <button class=\"btn btn-info\" type=\"button\" (click)=\"addRow(tmpObj)\">New record</button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"alert alert-danger show\" role=\"alert\" id=\"alertInputRow\">\r\n            <strong>Fill in all fields!</strong>\r\n        </div>\r\n    </div>\r\n    <div class=\"table__buttons\">\r\n        <button class=\"btn btn-primary saveBtn\" type=\"button\" (click)=\"jsonToOut()\">Save</button>\r\n    </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-jsonSave',\n  templateUrl: './json-save.component.html',\n  styleUrls: ['./json-save.component.css']\n})\nexport class JsonSaveComponent implements OnInit {\n  @Input() jsonOut;\n\n \nconstructor() { }\n\nngOnInit(): void {\n}\n\n}\n","<h2 class=\"page__title\">Output</h2>\n<div class=\"card border-0\">\n    <div class=\"jsonOutput-form input-group\">\n        <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">Edited JSON</span>\n        </div>\n        <textarea class=\"jsonOutput-form__textarea form-control\" aria-label=\"Edited JSON\" [(ngModel)]=\"jsonOut.text\"></textarea>\n    </div>\n    <!-- <button class=\"inputJson-form__submit btn btn-primary col-3\" type=\"button\" onclick=\"expFile()\">Save to file</button> -->\n</div>\n","import {Component, Input, Output, EventEmitter} from '@angular/core'\r\n\r\n@Component({\r\n    selector: 'app-jsonInput',\r\n    templateUrl: './jsonInput.component.html',\r\n    styleUrls: ['./jsonInput.component.css']\r\n})\r\nexport class JsonInputComponent {\r\n    @Input() textInput: string;\r\n     //textInput: string = '';\r\n\r\n    jsonObj = [];\r\n    @Output() jsonIn: EventEmitter<object> = new EventEmitter();\r\n\r\n    public jsonToObj(textVar){\r\n        let alert = document.getElementById('alertInput');\r\n        alert.style.display = \"none\";\r\n        try {\r\n            this.jsonObj = [];\r\n            this.jsonObj = JSON.parse(textVar);\r\n            this.jsonIn.emit(this.jsonObj);\r\n        }catch(err){\r\n            alert.style.display = \"inline\";\r\n        }\r\n    }\r\n\r\n    public changeListener(files: FileList){\r\n        console.log(files);\r\n        if(files && files.length > 0) {\r\n           let file : File = files.item(0); \r\n            //  console.log(file.name);\r\n            //  console.log(file.size);\r\n            //  console.log(file.type);\r\n             let reader: FileReader = new FileReader();\r\n             reader.readAsText(file);\r\n             reader.onload = (e) => {\r\n                let txt: string = reader.result as string;\r\n                this.textInput = txt;\r\n                // console.log(txt);\r\n             }\r\n          }\r\n      }\r\n    // jsonObj = {};\r\n    // jsonToObg(textVar): void{\r\n    //     this.jsonObj = {};\r\n    //     this.jsonObj = JSON.parse(textVar);\r\n    // }\r\n}","<div class=\"card border-0\">\r\n    <h2 class=\"page__title\">Input</h2>\r\n    <div class=\"jsonInput-form input-group\">\r\n        <div class=\"input-group-prepend\">\r\n            <span class=\"input-group-text\">\r\n                JSON input\r\n            </span>\r\n        </div>\r\n        <textarea class=\"jsonInput-form__input form-control\" aria-label=\"JSON input\"\r\n            placeholder=\"Put your JSON text here...\" [(ngModel)]=\"textInput\"></textarea>\r\n    </div>\r\n    <div class=\"custom-file\">\r\n        <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile01\"\r\n            (change)=\"changeListener($event.target.files)\">\r\n        <label class=\"custom-file-label\" for=\"inputGroupFile01\">From .txt file</label>\r\n    </div>\r\n    <div class=\"alert alert-danger show\" role=\"alert\" id=\"alertInput\">\r\n        <strong>Invalid JSON input!</strong>\r\n    </div>\r\n    <button class=\"inputJson-form__submit btn btn-primary \" type=\"button\" (click)=\"jsonToObj(textInput)\">Submit</button>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}